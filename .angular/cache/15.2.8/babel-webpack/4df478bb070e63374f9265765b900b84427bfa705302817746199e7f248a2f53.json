{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AgendamentoComponent = class AgendamentoComponent {\n  constructor(agendamentoService, router, activatedRoute, loginService) {\n    this.agendamentoService = agendamentoService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.loginService = loginService;\n    // IMPORTANDO AS INTERFACE\n    this.servicos = [];\n    this.dias = [];\n    this.horas = [];\n    this.cliente = [];\n    this.barbeariaSelecionada = null;\n    this.barbearias = \"\";\n    this.dia = \"\";\n    this.hora = \"\";\n    this.servico = \"\";\n    this.clientes = \"\";\n    this.nome = '';\n    this.email = '';\n  }\n  // Exibindo no HTML os documentos\n  ngOnInit() {\n    this.agendamentoService.getServicos().subscribe(servicos => {\n      this.servicos = servicos;\n    });\n    this.agendamentoService.getDias().subscribe(dias => {\n      this.dias = dias;\n    });\n    this.agendamentoService.getHoras().subscribe(horas => {\n      this.horas = horas;\n    });\n    const barbeariaId = this.activatedRoute.snapshot.params['id'];\n    if (barbeariaId) {\n      this.agendamentoService.getBarbearia(barbeariaId).subscribe(barbearia => {\n        this.barbeariaSelecionada = barbearia;\n      });\n    }\n  }\n  // Envia o formulário para o MongoDB\n  onSubmit(form) {\n    this.dia = form.value.dia;\n    this.hora = form.value.hora;\n    this.servico = form.value.servico;\n    this.barbearias = form.value.barbearias;\n    this.nome = form.value.nome;\n    this.email = form.value.email;\n    let agenda = {\n      barbearias: this.barbearias,\n      dia: this.dia,\n      hora: this.hora,\n      servicos: this.servico,\n      nome: this.nome,\n      email: this.email\n    };\n    this.agendamentoService.newAgendamento(agenda).subscribe(response => {\n      console.log(response);\n      alert('Serviço agendado');\n    }, error => {\n      console.log(error);\n      alert('Ocorreu um erro ao agendar');\n    });\n  }\n};\nAgendamentoComponent = __decorate([Component({\n  selector: 'app-agendamento',\n  templateUrl: './agendamento.component.html',\n  styleUrls: ['./agendamento.component.css']\n})], AgendamentoComponent);\nexport { AgendamentoComponent };","map":{"version":3,"mappings":"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","names":["Component","AgendamentoComponent","constructor","agendamentoService","router","activatedRoute","loginService","ngOnInit","getServicos","subscribe","servicos","getDias","dias","getHoras","horas","barbeariaId","snapshot","params","getBarbearia","barbearia","barbeariaSelecionada","onSubmit","form","dia","value","hora","servico","barbearias","nome","email","agenda","newAgendamento","response","console","log","alert","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\jpoli\\Downloads\\Barbearia-master\\src\\app\\clientes\\agendamento\\agendamento.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Servicos } from './servicos_agendar';\r\nimport { AgendamentoService } from './agendamento.service';\r\nimport { Dias } from './dia';\r\nimport { Horas } from './hora';\r\nimport { Agenda } from './agendar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LoginServiceService } from 'src/app/login/login-service.service';\r\nimport { cliente } from '../clientes';\r\nimport { Barbearia } from './barbearia';\r\nimport { LoginComponent } from 'src/app/login/login.component';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-agendamento',\r\n  templateUrl: './agendamento.component.html',\r\n  styleUrls: ['./agendamento.component.css']\r\n})\r\nexport class AgendamentoComponent {\r\n\r\n  // IMPORTANDO AS INTERFACE\r\n  servicos: Servicos[] = [];\r\n  dias: Dias[] = [];\r\n  horas: Horas[] = [];\r\n  cliente: cliente[] = []\r\n  \r\n\r\n  barbeariaSelecionada: Barbearia | null = null;\r\n  barbearias: string = \"\";\r\n  dia: string = \"\";\r\n  hora: string = \"\";\r\n  servico: string = \"\";\r\n  clientes: string = \"\"\r\n  nome: string = ''\r\n  email: string = ''\r\n\r\n\r\n \r\n\r\n  constructor(\r\n    private agendamentoService: AgendamentoService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private loginService: LoginServiceService\r\n  ) {}\r\n\r\n  // Exibindo no HTML os documentos\r\n  ngOnInit() {\r\n    this.agendamentoService.getServicos().subscribe(servicos => {\r\n      this.servicos = servicos;\r\n    });\r\n\r\n    this.agendamentoService.getDias().subscribe(dias => {\r\n      this.dias = dias;\r\n    });\r\n\r\n    this.agendamentoService.getHoras().subscribe(horas => {\r\n      this.horas = horas;\r\n    });\r\n\r\n   \r\n  \r\n  \r\n\r\n    const barbeariaId = this.activatedRoute.snapshot.params['id'];\r\n    if (barbeariaId) {\r\n      this.agendamentoService.getBarbearia(barbeariaId).subscribe(barbearia => {\r\n        this.barbeariaSelecionada = barbearia;\r\n      });\r\n    }\r\n  }\r\n\r\n  // Envia o formulário para o MongoDB\r\n  onSubmit(form: any) {\r\n    this.dia = form.value.dia;\r\n    this.hora = form.value.hora;\r\n    this.servico = form.value.servico;\r\n    this.barbearias = form.value.barbearias;\r\n    this.nome = form.value.nome\r\n    this.email = form.value.email\r\n\r\n\r\n    let agenda: Agenda = {\r\n      barbearias: this.barbearias,\r\n      dia: this.dia,\r\n      hora: this.hora,\r\n      servicos: this.servico,\r\n      nome: this.nome,\r\n      email: this.email\r\n    };\r\n\r\n    this.agendamentoService.newAgendamento(agenda).subscribe(\r\n      response => {\r\n        console.log(response);\r\n        alert('Serviço agendado');\r\n        \r\n      },\r\n      error => {\r\n        console.log(error);\r\n        alert('Ocorreu um erro ao agendar');\r\n      }\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}