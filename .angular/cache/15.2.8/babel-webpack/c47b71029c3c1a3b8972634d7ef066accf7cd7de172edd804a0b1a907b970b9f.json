{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { LoginServiceService } from './login-service.service';\nlet AgendamentoComponent = class AgendamentoComponent {\n  constructor(agendamentoService, router, activatedRoute, loginService) {\n    this.agendamentoService = agendamentoService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.loginService = loginService;\n    this.servicos = [];\n    this.dias = [];\n    this.horas = [];\n    this.barbeariaSelecionada = null;\n    this.barbearias = \"\";\n    this.dia = \"\";\n    this.hora = \"\";\n    this.cliente = \"\";\n    this.servico = \"\";\n  }\n  ngOnInit() {\n    this.agendamentoService.getServicos().subscribe(servicos => {\n      this.servicos = servicos;\n    });\n    this.agendamentoService.getDias().subscribe(dias => {\n      this.dias = dias;\n    });\n    this.agendamentoService.getHoras().subscribe(horas => {\n      this.horas = horas;\n    });\n    const barbeariaId = this.activatedRoute.snapshot.params['id'];\n    if (barbeariaId) {\n      this.agendamentoService.getBarbearia(barbeariaId).subscribe(barbearia => {\n        this.barbeariaSelecionada = barbearia;\n      });\n    }\n    const clienteId = LoginServiceService.clienteId;\n    if (clienteId !== undefined) {\n      this.agendamentoService.getCliente(clienteId).subscribe(cliente => {\n        this.cliente = cliente?.nome ?? \"\";\n      });\n    }\n  }\n  onSubmit(form) {\n    this.cliente = form.value.cliente;\n    this.dia = form.value.dia;\n    this.hora = form.value.hora;\n    this.servico = form.value.servico;\n    this.barbearias = form.value.barbearias;\n    let agenda = {\n      barbearias: this.barbearias,\n      cliente: this.cliente,\n      dia: this.dia,\n      hora: this.hora,\n      servicos: this.servico\n    };\n    this.agendamentoService.newAgendamento(agenda).subscribe(response => {\n      console.log(response);\n      alert('Serviço agendado');\n      console.log('Valor do serviço:', this.servico);\n    }, error => {\n      console.log(error);\n      alert('Ocorreu um erro ao agendar');\n    });\n  }\n};\nAgendamentoComponent = __decorate([Component({\n  selector: 'app-agendamento',\n  templateUrl: './agendamento.component.html',\n  styleUrls: ['./agendamento.component.css']\n})], AgendamentoComponent);\nexport { AgendamentoComponent };","map":{"version":3,"mappings":"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","names":["Component","LoginServiceService","AgendamentoComponent","constructor","agendamentoService","router","activatedRoute","loginService","ngOnInit","getServicos","subscribe","servicos","getDias","dias","getHoras","horas","barbeariaId","snapshot","params","getBarbearia","barbearia","barbeariaSelecionada","clienteId","undefined","getCliente","cliente","nome","onSubmit","form","value","dia","hora","servico","barbearias","agenda","newAgendamento","response","console","log","alert","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\jpoli\\Downloads\\Barbearia-master\\src\\app\\clientes\\agendamento\\agendamento.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Servicos } from './servicos_agendar';\r\nimport { AgendamentoService } from './agendamento.service';\r\nimport { Dias } from './dia';\r\nimport { Horas } from './hora';\r\nimport { Agenda } from './agendar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Barbearia } from './barbearia';\r\nimport { LoginServiceService } from './login-service.service';\r\n\r\n@Component({\r\n  selector: 'app-agendamento',\r\n  templateUrl: './agendamento.component.html',\r\n  styleUrls: ['./agendamento.component.css']\r\n})\r\nexport class AgendamentoComponent {\r\n  servicos: Servicos[] = [];\r\n  dias: Dias[] = [];\r\n  horas: Horas[] = [];\r\n  barbeariaSelecionada: Barbearia | null = null;\r\n  barbearias: string = \"\";\r\n  dia: string = \"\";\r\n  hora: string = \"\";\r\n  cliente: string = \"\";\r\n  servico: string = \"\";\r\n\r\n  constructor(\r\n    private agendamentoService: AgendamentoService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private loginService: LoginServiceService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.agendamentoService.getServicos().subscribe(servicos => {\r\n      this.servicos = servicos;\r\n    });\r\n\r\n    this.agendamentoService.getDias().subscribe(dias => {\r\n      this.dias = dias;\r\n    });\r\n\r\n    this.agendamentoService.getHoras().subscribe(horas => {\r\n      this.horas = horas;\r\n    });\r\n\r\n    const barbeariaId = this.activatedRoute.snapshot.params['id'];\r\n    if (barbeariaId) {\r\n      this.agendamentoService.getBarbearia(barbeariaId).subscribe(barbearia => {\r\n        this.barbeariaSelecionada = barbearia;\r\n      });\r\n    }\r\n\r\n    const clienteId = LoginServiceService.clienteId;\r\n  if (clienteId !== undefined) {\r\n    this.agendamentoService.getCliente(clienteId).subscribe(cliente => {\r\n      this.cliente = cliente?.nome ?? \"\";\r\n    });\r\n    }\r\n  }\r\n\r\n  onSubmit(form: any) {\r\n    this.cliente = form.value.cliente;\r\n    this.dia = form.value.dia;\r\n    this.hora = form.value.hora;\r\n    this.servico = form.value.servico;\r\n    this.barbearias = form.value.barbearias;\r\n\r\n    let agenda: Agenda = {\r\n      barbearias: this.barbearias,\r\n      cliente: this.cliente,\r\n      dia: this.dia,\r\n      hora: this.hora,\r\n      servicos: this.servico\r\n    };\r\n\r\n    this.agendamentoService.newAgendamento(agenda).subscribe(\r\n      response => {\r\n        console.log(response);\r\n        alert('Serviço agendado');\r\n        console.log('Valor do serviço:', this.servico);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        alert('Ocorreu um erro ao agendar');\r\n      }\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}