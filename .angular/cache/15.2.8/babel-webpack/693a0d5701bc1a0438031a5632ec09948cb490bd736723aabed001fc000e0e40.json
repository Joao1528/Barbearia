{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MenuService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/barbearia/barbearias';\n    this.apiUrl2 = 'http://localhost:3000/barbearia';\n    this.barbearia = [];\n  }\n  getBarbearias() {\n    return this.http.get(this.apiUrl);\n  }\n  getBarbearia(id) {\n    const url = `${this.apiUrl2}/${id}`;\n    return this.http.get(url);\n  }\n}\nMenuService.ɵfac = function MenuService_Factory(t) {\n  return new (t || MenuService)(i0.ɵɵinject(i1.HttpClient));\n};\nMenuService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MenuService,\n  factory: MenuService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,WAAW;EAKtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,WAAM,GAAG,4CAA4C;IACrD,YAAO,GAAG,iCAAiC;IAInD,cAAS,GAAiB,EAAE;EAFY;EAIxCC,aAAa;IACX,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAc,IAAI,CAACC,MAAM,CAAC;EAChD;EAEAC,YAAY,CAACC,EAAU;IACrB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,IAAIF,EAAE,EAAE;IACnC,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAYI,GAAG,CAAC;EACtC;;AAhBWR,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAU,SAAXV,WAAW;EAAAW,YAFV;AAAM","names":["MenuService","constructor","http","getBarbearias","get","apiUrl","getBarbearia","id","url","apiUrl2","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\LAB-A02\\Documents\\Barber\\Barbearia\\src\\app\\clientes\\menu\\menu.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Barbearia } from './barbearia';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MenuService {\r\n\r\n  private apiUrl = 'http://localhost:3000/barbearia/barbearias';\r\n  private apiUrl2 = 'http://localhost:3000/barbearia';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  barbearia: Barbearia [] = [];\r\n\r\n  getBarbearias(): Observable<Barbearia[]> {\r\n    return this.http.get<Barbearia[]>(this.apiUrl);\r\n  }\r\n\r\n  getBarbearia(id: number): Observable<Barbearia> {\r\n    const url = `${this.apiUrl2}/${id}`;\r\n    return this.http.get<Barbearia>(url);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}