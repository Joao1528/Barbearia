{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./login-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" E-mail ou senha est\\u00E3o incorretos. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n    this.email = '';\n    this.senha = '';\n    this.erro = false;\n  }\n  onSubmit(form) {\n    this.email = form.value.nome;\n    this.senha = form.value.senha;\n    const cliente = {\n      email: this.email,\n      senha: this.senha\n    };\n    this.loginService.getlogin(cliente).subscribe(response => {\n      console.log(response._id);\n      // LoginServiceService.clienteId = response._id; // Salva o ID do cliente no serviço\n      this.router.navigate(['/menu']);\n    }, error => {\n      console.log(error);\n      this.erro = true;\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginServiceService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 25,\n  vars: 3,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [\"rel\", \"stylesheet\", \"href\", \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\"], [1, \"container\"], [1, \"text-center\", \"mt-5\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"nome\"], [\"type\", \"text\", \"name\", \"nome\", \"id\", \"nome\", \"placeholder\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"senha\"], [\"type\", \"password\", \"name\", \"senha\", \"id\", \"senha\", \"required\", \"\", \"placeholder\", \"Senha\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-3\", \"me-3\"], [\"routerLink\", \"cadastro\", \"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mt-3\"], [\"class\", \"alert alert-danger mt-3\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\", \"mt-3\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r2 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n      i0.ɵɵelementStart(4, \"title\");\n      i0.ɵɵtext(5, \"Meu Formul\\u00E1rio\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"link\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"body\")(8, \"div\", 4)(9, \"form\", 5, 6);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_9_listener() {\n        i0.ɵɵrestoreView(_r2);\n        const _r0 = i0.ɵɵreference(10);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"E-mail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 7)(16, \"label\", 10);\n      i0.ɵɵtext(17, \"Senha\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.senha = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 7)(20, \"button\", 12);\n      i0.ɵɵtext(21, \"LOGIN\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"a\", 13);\n      i0.ɵɵtext(23, \"CADASTRO\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(24, LoginComponent_div_24_Template, 2, 0, \"div\", 14);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.senha);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.erro);\n    }\n  },\n  dependencies: [i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQWdFSyIsInNvdXJjZXNDb250ZW50IjpbIi8qIC5jb250YWluZXIge1xuICAgIG1heC13aWR0aDogNTAwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbiAgXG4gIGhlYWRlciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gIH1cbiAgXG4gIGgxIHtcbiAgICBmb250LXNpemU6IDM2cHg7XG4gICAgbWFyZ2luLXRvcDogMzBweDtcbiAgfVxuICBcbiAgLmZvcm0tZ3JvdXAge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIH1cbiAgXG4gIGxhYmVsIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cbiAgXG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuICBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICB9XG4gIFxuICBidXR0b25bdHlwZT1cInN1Ym1pdFwiXSxcbiAgYVt0eXBlPVwiYnV0dG9uXCJdIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XG4gICAgYm9yZGVyOiBub25lO1xuICB9XG4gIFxuICBidXR0b25bdHlwZT1cInN1Ym1pdFwiXTpob3ZlcixcbiAgYVt0eXBlPVwiYnV0dG9uXCJdOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA2OWQ5O1xuICB9XG4gIFxuICAuYWxlcnQtZGFuZ2VyIHtcbiAgICBjb2xvcjogIzcyMWMyNDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhkN2RhO1xuICAgIGJvcmRlci1jb2xvcjogI2Y1YzZjYjtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICB9XG5cbiAgYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgfSAqLyJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;IA0BMA,+BAAkD;IAChDA,wDACF;IAAAA,iBAAM;;;AClBZ,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,YAAiC,EAAUC,MAAc;IAAzD,iBAAY,GAAZD,YAAY;IAA+B,WAAM,GAANC,MAAM;IAJrE,UAAK,GAAW,EAAE;IAClB,UAAK,GAAW,EAAE;IAClB,SAAI,GAAY,KAAK;EAE2D;EAEhFC,QAAQ,CAACC,IAAS;IAChB,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACE,KAAK,CAACC,IAAI;IAC5B,IAAI,CAACC,KAAK,GAAGJ,IAAI,CAACE,KAAK,CAACE,KAAK;IAE7B,MAAMC,OAAO,GAAY;MACvBJ,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBG,KAAK,EAAE,IAAI,CAACA;KACb;IAED,IAAI,CAACP,YAAY,CAACS,QAAQ,CAACD,OAAO,CAAC,CAACE,SAAS,CAC1CC,QAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,GAAG,CAAC;MAC1B;MACC,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,EACAC,KAAK,IAAI;MACRJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;MAClB,IAAI,CAACC,IAAI,GAAG,IAAI;IAClB,CAAC,CACF;EACH;;AA3BWnB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDT3BzB,+BAAgB;MAGdA,0BAAsB;MAEtBA,6BAAO;MAAAA,mCAAc;MAAAA,iBAAQ;MAE7BA,0BAAsG;MACxGA,iBAAO;MAEPA,4BAAM;MAEgBA;QAAAA;QAAA;QAAA,OAAYA,gCAAW;MAAA,EAAC;MACxCA,+BAAwB;MACJA,uBAAM;MAAAA,iBAAQ;MAChCA,iCAAsG;MAA7DA;QAAA;MAAA,EAAmB;MAA5DA,iBAAsG;MAExGA,+BAAwB;MACHA,sBAAK;MAAAA,iBAAQ;MAChCA,kCAAqH;MAAtEA;QAAA;MAAA,EAAmB;MAAlEA,iBAAqH;MAEvHA,+BAAwB;MACkCA,sBAAK;MAAAA,iBAAS;MACtEA,8BAAoE;MAAAA,yBAAQ;MAAAA,iBAAI;MAElFA,kEAEM;MACRA,iBAAO;;;MAbsCA,gBAAmB;MAAnBA,mCAAmB;MAIbA,eAAmB;MAAnBA,mCAAmB;MAM9DA,eAAU;MAAVA,+BAAU","names":["i0","LoginComponent","constructor","loginService","router","onSubmit","form","email","value","nome","senha","cliente","getlogin","subscribe","response","console","log","_id","navigate","error","erro","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\jpoli\\Downloads\\Barbearia-master\\src\\app\\login\\login.component.html","C:\\Users\\jpoli\\Downloads\\Barbearia-master\\src\\app\\login\\login.component.ts"],"sourcesContent":["<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Meu Formulário</title>\n\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n  <div class=\"container\">\n    <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" class=\"text-center mt-5\">\n      <div class=\"form-group\">\n        <label for=\"nome\">E-mail</label>\n        <input type=\"text\" name=\"nome\" id=\"nome\" [(ngModel)]=\"email\" class=\"form-control\" placeholder=\"email\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"senha\">Senha</label>\n        <input type=\"password\" name=\"senha\" id=\"senha\" [(ngModel)]=\"senha\" required class=\"form-control\" placeholder=\"Senha\">\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary mt-3 me-3\" type=\"submit\">LOGIN</button>\n        <a routerLink=\"cadastro\" class=\"btn btn-primary mt-3\" type=\"button\">CADASTRO</a>\n      </div>\n      <div *ngIf=\"erro\" class=\"alert alert-danger mt-3\">\n        E-mail ou senha estão incorretos.\n      </div>\n    </form>\n  </div>\n\n  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n</body>\n\n</html>\n","import { Component } from '@angular/core';\nimport { cliente } from '../clientes/clientes';\nimport { LoginServiceService } from './login-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  email: string = '';\n  senha: string = '';\n  erro: boolean = false;\n\n  constructor(private loginService: LoginServiceService, private router: Router) {}\n\n  onSubmit(form: any) {\n    this.email = form.value.nome;\n    this.senha = form.value.senha;\n\n    const cliente: cliente = {\n      email: this.email,\n      senha: this.senha,\n    };\n\n    this.loginService.getlogin(cliente).subscribe(\n      (response) => {\n        console.log(response._id);\n       // LoginServiceService.clienteId = response._id; // Salva o ID do cliente no serviço\n        this.router.navigate(['/menu']);\n      },\n      (error) => {\n        console.log(error);\n        this.erro = true;\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}